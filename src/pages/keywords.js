// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Config = require("../Config.js");
var Helmet = require("../bindings/gatsby/helmet.js");
var Vrroom = require("vrroom/src/Vrroom.bs.js");
var Graphql = require("../utils/Graphql.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TypedGlamor = require("bs-typed-glamor/src/TypedGlamor.bs.js");
var PackageSummary = require("../components/PackageSummary.js");

var root = TypedGlamor.css(/* None */0, /* :: */[
      TypedGlamor.select("& h2 > a", /* :: */[
            TypedGlamor.textDecoration(TypedGlamor.none),
            /* :: */[
              TypedGlamor.hover(/* :: */[
                    TypedGlamor.textDecoration(TypedGlamor.underline),
                    /* [] */0
                  ]),
              /* [] */0
            ]
          ]),
      /* [] */0
    ]);

var Styles = /* module */[/* root */root];

var component = ReasonReact.statelessComponent("Keywords");

function make(data, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          className: TypedGlamor.toString(root)
                        }, ReasonReact.element(/* None */0, /* None */0, Helmet.make(/* Some */[Config.titleTemplate("Keywords")], /* None */0, /* None */0, /* None */0, /* array */[])), React.createElement("h1", undefined, Vrroom.text("Keywords")), ReasonReact.element(/* None */0, /* None */0, Curry._3(Vrroom.Control[/* Map */0][/* make */1], data.keywords.group, /* None */0, (function (keyword) {
                                    return React.createElement("div", {
                                                key: keyword.name
                                              }, React.createElement("h2", undefined, React.createElement("a", {
                                                        href: "/keyword/" + keyword.name
                                                      }, Vrroom.text(keyword.name))), ReasonReact.element(/* None */0, /* None */0, Curry._3(Vrroom.Control[/* Map */0][/* make */1], Graphql.getNodes(keyword), /* None */0, (function ($$package) {
                                                          return ReasonReact.element(/* Some */[$$package.id], /* None */0, PackageSummary.make($$package, /* array */[]));
                                                        }))));
                                  }))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.data, /* array */[]);
      }));


  export const query = graphql`
    query KeywordsQuery {
      keywords: allPackages {
        group(field: keywords) {
          name: fieldValue
          edges {
            node {
              type
              id
              name
              version
              category
              flags
              platforms
              description
              keywords
              license
              updated
              score
              quality
              popularity
              maintenance
              stars
              slug
            }
          }
        }
      }
    }
  `

;

exports.Styles = Styles;
exports.component = component;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* root Not a pure module */
