// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var Vrroom = require("vrroom/src/Vrroom.bs.js");
var Graphql = require("../utils/Graphql.js");
var TopList = require("../components/TopList.js");
var SearchBox = require("../components/SearchBox.js");
var IndexStyles = require("../styles/IndexStyles.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TypedGlamor = require("bs-typed-glamor/src/TypedGlamor.bs.js");

function sort(groups) {
  var copy = groups.slice();
  $$Array.stable_sort((function (a, b) {
          return b.count - a.count | 0;
        }), copy);
  return copy;
}

var component = ReasonReact.statelessComponent("Index");

function make(data, param) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("div", {
                          className: TypedGlamor.toString(IndexStyles.root)
                        }, ReasonReact.element(undefined, undefined, SearchBox.make(true, /* array */[])), React.createElement("div", {
                              className: TypedGlamor.toString(IndexStyles.keywords)
                            }), React.createElement("div", {
                              className: TypedGlamor.toString(IndexStyles.lists)
                            }, React.createElement("div", undefined, React.createElement("h2", undefined, Vrroom.text("Recent releases")), ReasonReact.element(undefined, undefined, TopList.make(Graphql.getNodes(data.recentPackages), /* updated */500154939, /* array */[]))), React.createElement("div", undefined, React.createElement("h2", undefined, Vrroom.text("Most popular")), ReasonReact.element(undefined, undefined, TopList.make(Graphql.getNodes(data.popularPackages), /* stars */67859553, /* array */[])))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.data, /* array */[]);
      }));


  export const query = graphql`
    query IndexQuery {
      recentPackages: allPackages(filter: { type: { eq: "published" } }, limit: 10, sort: { fields: [updated], order: DESC } ) {
        edges {
          node {
            ...package
          }
        }
      }

      popularPackages: allPackages(limit: 10, sort: { fields: [popularity], order: DESC } ) {
        edges {
          node {
            ...package
          }
        }
      }

      keywords: allPackages {
        group(field: keywords) {
          name: fieldValue,
          count: totalCount
        }
      }
    }

    fragment package on Packages {
      name
      version
      description
      keywords
      license
      updated
      stars
      slug
    }
  `

;

var Styles = 0;

exports.Styles = Styles;
exports.sort = sort;
exports.component = component;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
