// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Tag = require("./Tag.js");
var Icon = require("../bindings/Icon.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Flags = require("./Flags.js");
var Score = require("./Score.js");
var React = require("react");
var Vrroom = require("vrroom/src/Vrroom.bs.js");
var TimeAgo = require("../bindings/TimeAgo.js");
var Version = require("./Version.js");
var Platforms = require("./Platforms.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TypedGlamor = require("bs-typed-glamor/src/TypedGlamor.bs.js");
var PackageSummaryStyles = require("./PackageSummaryStyles.js");

var component = ReasonReact.statelessComponent("PackageSummary");

function make($$package, param) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var match = $$package.stars;
              var match$1 = $$package.license;
              var description = $$package.description;
              var tmp = description === "" ? Vrroom.nbsp : Vrroom.text(description);
              return React.createElement("div", {
                          className: TypedGlamor.toString(PackageSummaryStyles.root($$package.flags.length !== 0))
                        }, React.createElement("header", {
                              className: TypedGlamor.toString(PackageSummaryStyles.header)
                            }, ReasonReact.element(undefined, undefined, Version.make($$package.version, $$package.type === "published", /* array */[])), ReasonReact.element(undefined, undefined, Platforms.make($$package.platforms, /* array */[])), React.createElement("div", {
                                  className: TypedGlamor.toString(PackageSummaryStyles.props)
                                }, React.createElement("span", {
                                      className: TypedGlamor.toString(PackageSummaryStyles.stars)
                                    }, (match == null) ? Vrroom.text("-") : Vrroom.text(match), ReasonReact.element(undefined, undefined, Icon.Star[/* make */0](Caml_option.some(PackageSummaryStyles.starIcon), /* array */[]))), ReasonReact.element(undefined, undefined, Score.make($$package, /* array */[])), (match$1 == null) ? React.createElement("span", {
                                        className: TypedGlamor.toString(PackageSummaryStyles.nolicense)
                                      }, Vrroom.text("No license")) : React.createElement("span", {
                                        className: TypedGlamor.toString(PackageSummaryStyles.license)
                                      }, Vrroom.text(match$1)), React.createElement("span", {
                                      className: TypedGlamor.toString(PackageSummaryStyles.updated)
                                    }, ReasonReact.element(undefined, undefined, TimeAgo.make($$package.updated, /* array */[]))))), React.createElement("div", {
                              className: TypedGlamor.toString(PackageSummaryStyles.description)
                            }, ReasonReact.element(undefined, undefined, Flags.make($$package, undefined, /* array */[])), tmp), React.createElement("div", {
                              className: TypedGlamor.toString(PackageSummaryStyles.tags)
                            }, ReasonReact.element(undefined, undefined, Icon.Tags[/* make */0](TypedGlamor.toString(PackageSummaryStyles.tagsIcon), /* array */[])), ReasonReact.element(undefined, undefined, Tag.Category[/* make */2]($$package.category, /* array */[])), ReasonReact.element(undefined, undefined, Curry._3(Vrroom.Control[/* Map */0][/* make */1], $$package.keywords, undefined, (function (keyword) {
                                        return ReasonReact.element(keyword, undefined, Tag.Keyword[/* make */1](keyword, /* array */[]));
                                      })))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var Styles = 0;

exports.Styles = Styles;
exports.component = component;
exports.make = make;
/* component Not a pure module */
