// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Icon = require("../bindings/Icon.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Flags = require("./Flags.js");
var Score = require("./Score.js");
var React = require("react");
var Rebase = require("@glennsl/rebase/src/Rebase.bs.js");
var Vrroom = require("vrroom/src/Vrroom.bs.js");
var TimeAgo = require("../bindings/TimeAgo.js");
var Platforms = require("./Platforms.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TypedGlamor = require("bs-typed-glamor/src/TypedGlamor.bs.js");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");
var SearchResultItemStyles = require("./SearchResultItemStyles.js");

function decode(json) {
  return {
          id: Json_decode.field("id", Json_decode.string, json),
          type: Json_decode.field("type", Json_decode.string, json),
          slug: Json_decode.map((function (id) {
                  return "/package/" + id;
                }), (function (param) {
                  return Json_decode.field("id", Json_decode.string, param);
                }), json),
          name: Json_decode.field("name", Json_decode.string, json),
          description: Json_decode.field("description", Json_decode.string, json),
          stars: Js_null_undefined.fromOption(Rebase.Option[/* map */0]((function (prim) {
                      return String(prim);
                    }), Json_decode.optional((function (param) {
                          return Json_decode.field("stars", Json_decode.$$int, param);
                        }), json))),
          updated: Json_decode.field("updated", Json_decode.date, json),
          version: Json_decode.field("version", Json_decode.string, json),
          score: Json_decode.field("score", Json_decode.$$float, json),
          quality: Json_decode.field("quality", Json_decode.$$float, json),
          popularity: Json_decode.field("popularity", Json_decode.$$float, json),
          maintenance: Json_decode.field("maintenance", Json_decode.$$float, json),
          platforms: Rebase.Option[/* getOr */16](/* array */[], Json_decode.optional((function (param) {
                      return Json_decode.field("platforms", (function (param) {
                                    return Json_decode.array(Json_decode.string, param);
                                  }), param);
                    }), json)),
          flags: Rebase.Option[/* getOr */16](/* array */["stale"], Json_decode.optional((function (param) {
                      return Json_decode.field("flags", (function (param) {
                                    return Json_decode.array(Json_decode.string, param);
                                  }), param);
                    }), json))
        };
}

var component = ReasonReact.statelessComponent("SearchResultItem");

function make($$package, isFocused, onClick, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var match = $$package.stars;
              return React.createElement("div", {
                          className: TypedGlamor.toString(SearchResultItemStyles.root(Rebase.$$Array[/* length */16]($$package.flags) > 0, isFocused)),
                          onClick: (function () {
                              return Curry._1(onClick, $$package);
                            })
                        }, React.createElement("div", undefined, React.createElement("span", {
                                  className: TypedGlamor.toString(SearchResultItemStyles.name)
                                }, Vrroom.text($$package.name)), React.createElement("span", {
                                  className: TypedGlamor.toString(SearchResultItemStyles.version)
                                }, Vrroom.text($$package.version)), ReasonReact.element(/* None */0, /* None */0, Platforms.make($$package.platforms, /* array */[])), React.createElement("div", {
                                  className: TypedGlamor.toString(SearchResultItemStyles.description)
                                }, ReasonReact.element(/* None */0, /* None */0, Flags.make($$package, /* None */0, /* array */[])), Vrroom.text($$package.description))), React.createElement("div", undefined, React.createElement("div", undefined, React.createElement("span", {
                                      className: TypedGlamor.toString(SearchResultItemStyles.stars)
                                    }, (match == null) ? Vrroom.text("-") : Vrroom.text(match), ReasonReact.element(/* None */0, /* None */0, Icon.Star[/* make */0](/* Some */[TypedGlamor.toString(SearchResultItemStyles.starIcon)], /* array */[]))), ReasonReact.element(/* None */0, /* None */0, Score.make($$package, /* array */[]))), React.createElement("div", {
                                  className: TypedGlamor.toString(SearchResultItemStyles.updated)
                                }, ReasonReact.element(/* None */0, /* None */0, TimeAgo.make($$package.updated, /* array */[])))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var Styles = 0;

exports.Styles = Styles;
exports.decode = decode;
exports.component = component;
exports.make = make;
/* component Not a pure module */
